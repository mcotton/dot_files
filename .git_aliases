

alias gitpnp='git pull origin $(current_branch) && git push origin $(current_branch)'
alias status='git status --short'
alias commit='git commit'
alias add='git add .'
#alias log='git log --color | less -R'
alias log="git log --graph --pretty=format:'%Cred%h%Creset-%C(yellow)%d%Creset
%s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --"
alias gittree='git log --graph --simplify-by-decoration --pretty=format:'%d' --all'
alias lola="git log --graph --decorate --pretty=oneline --abbrev-commit
--all"
alias bump="git checkout master; git merge mcotton; git pull --all; git push; git checkout mcotton"
alias patches="git log --abbrev-commit -p"
alias gti='git'
alias checkout='git checkout'
alias gdiff='git diff --ignore-space-change'

alias record='i=1;while [ 1 ];do screencapture -t jpg -x /Volumes/Mr.Tiny/$i.jpg; let i++;sleep 6; done'

alias new='ls -ltr | tail'

function parse_git_branch () {
       git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

RED="\[\033[0;31m\]"
YELLOW="\[\033[0;33m\]"
GREEN="\[\033[0;32m\]"
NO_COLOUR="\[\033[0m\]"

#PS1="$GREEN\w$YELLOW\$(parse_git_branch)$NO_COLOUR\$ "

function parse_git_dirty {
 [[ $(git status 2> /dev/null | tail -n1) != "nothing to commit (working directory clean)" ]] && echo "*"
}
function parse_git_branch {
    git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/(\1$(parse_git_dirty))/"
}
#export PS1='\u@\h \[\033[1;33m\]\w\[\033[0m\]$(parse_git_branch)$ '
PS1="[\h] $GREEN\w$YELLOW \$(parse_git_branch)$NO_COLOUR\$ "
